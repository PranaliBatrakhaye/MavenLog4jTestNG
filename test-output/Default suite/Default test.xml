<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Pranalipc" name="Default test" tests="2" failures="0" timestamp="30 Aug 2019 09:23:31 GMT" time="0.032" errors="0">
  <testcase name="@BeforeSuite openBrowser" time="0.0" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <failure type="java.lang.IllegalStateException" message="The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html">
      <![CDATA[java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html
	at com.google.common.base.Preconditions.checkState(Preconditions.java:847)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:134)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at com.MavenTestngLog4j.MavenLog4JXML.openBrowser(MavenLog4JXML.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
    </failure>
  </testcase> <!-- @BeforeSuite openBrowser -->
  <testcase name="@BeforeTest enterUrl" time="0.0" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <skipped/>
  </testcase> <!-- @BeforeTest enterUrl -->
  <testcase name="@BeforeClass maximizeWindow" time="0.0" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <skipped/>
  </testcase> <!-- @BeforeClass maximizeWindow -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@BeforeMethod beforeMethod" time="0.0" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase name="@AfterMethod afterMethod" time="0.0" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase name="@AfterClass afterClass" time="0.0" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase name="@AfterTest closeBrowser" time="0.0" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <skipped/>
  </testcase> <!-- @AfterTest closeBrowser -->
  <testcase name="loginWithInvalidDetails" time="0.001" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <skipped/>
  </testcase> <!-- loginWithInvalidDetails -->
  <testcase name="loginWithValidDetails" time="0.001" classname="com.MavenTestngLog4j.MavenLog4JXML">
    <skipped/>
  </testcase> <!-- loginWithValidDetails -->
</testsuite> <!-- Default test -->
